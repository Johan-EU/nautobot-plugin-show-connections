[tool.poetry]
name = "nautobot-plugin-show-connections"
version = "0.1.0"
description = "Nautobot pluging that shows connections between sites based on the presence of circuits"
authors = ["Johan Boer"]
license = "Apache-2.0"
packages = [
    { include = "nautobot_show_connections" },
]

[tool.poetry.dependencies]
python = "^3.7"
nautobot = "*"
# Markupsafe 2.1.0 has removed soft_unicode and that breaks jinja2
markupsafe = "2.0.1"

[tool.poetry.dev-dependencies]
invoke = "^1.4.1"
black = "^21.6b0"
bandit = "^1.6.2"
pylint = "^2.5.2"
pylint-django = "~2.3.0"
pydocstyle = "^5.0.2"
flake8 = "^3.8.3"
pytest-django = "^4.1.0"
toml = "^0.10.2"
sentry-sdk = "^1.0.0"
django-debug-toolbar = "^3.2.1"
coverage = "^5.5"
django-extensions = "^3.1.3"
ipython = "7.16.3"
time-machine = "^2.4.0"
yamllint = "^1.26.3"
Markdown = "3.3.4"

[tool.poetry.extras]
metrics = ["nautobot-capacity-metrics"]

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"

# Don't cache data for later comparisons
persistent="no"

# Don't raise alarms if args/kwargs has an issue, as may be required, just as a decorator
ignored-argument-names="args|kwargs"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    bad-continuation,
    too-few-public-methods,
    duplicate-code,
    too-many-ancestors,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
adopts = "-vv"
